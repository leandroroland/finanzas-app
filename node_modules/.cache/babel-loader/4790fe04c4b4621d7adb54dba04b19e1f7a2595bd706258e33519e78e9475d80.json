{"ast":null,"code":"var _jsxFileName = \"/home/leandro/finanzas-app/src/components/Form/ProductServiceForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { supabase } from '../../lib/supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductServiceForm = ({\n  loadInventory\n}) => {\n  _s();\n  const [name, setName] = useState('');\n  const [type, setType] = useState('service');\n  const [price, setPrice] = useState('');\n  const [stock, setStock] = useState('');\n  const handleTypeChange = selectedType => {\n    setType(selectedType);\n    setName('');\n    setPrice('');\n    setStock('');\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const item = {\n      name,\n      type,\n      price: parseFloat(price),\n      stock: type === 'product' ? parseInt(stock) : null\n    };\n    const {\n      error\n    } = await supabase.from('inventory').insert([item]);\n    if (error) {\n      console.error('Error al insertar el item:', error);\n    } else {\n      loadInventory(); // Asegúrate de que loadInventory esté disponible como prop\n    }\n    resetForm();\n  };\n  const resetForm = () => {\n    setName('');\n    setType('service');\n    setPrice('');\n    setStock('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Agregar Producto o Servicio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"product-service-form\",\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductServiceForm, \"yteB7O0w+Ikmyp8SxzFC/v+h6FU=\");\n_c = ProductServiceForm;\nexport default ProductServiceForm;\nvar _c;\n$RefreshReg$(_c, \"ProductServiceForm\");","map":{"version":3,"names":["React","useState","supabase","jsxDEV","_jsxDEV","ProductServiceForm","loadInventory","_s","name","setName","type","setType","price","setPrice","stock","setStock","handleTypeChange","selectedType","handleSubmit","e","preventDefault","item","parseFloat","parseInt","error","from","insert","console","resetForm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","onSubmit","_c","$RefreshReg$"],"sources":["/home/leandro/finanzas-app/src/components/Form/ProductServiceForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { supabase } from '../../lib/supabaseClient';\n\nconst ProductServiceForm = ({ loadInventory }) => {\n  const [name, setName] = useState('');\n  const [type, setType] = useState('service');\n  const [price, setPrice] = useState('');\n  const [stock, setStock] = useState('');\n\n  const handleTypeChange = (selectedType) => {\n    setType(selectedType);\n    setName('');\n    setPrice('');\n    setStock('');\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const item = {\n      name,\n      type,\n      price: parseFloat(price),\n      stock: type === 'product' ? parseInt(stock) : null,\n    };\n\n    const { error } = await supabase.from('inventory').insert([item]);\n\n    if (error) {\n      console.error('Error al insertar el item:', error);\n    } else {\n      loadInventory(); // Asegúrate de que loadInventory esté disponible como prop\n    }\n\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setType('service');\n    setPrice('');\n    setStock('');\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      <h2>Agregar Producto o Servicio</h2>\n      <form id=\"product-service-form\" onSubmit={handleSubmit}>\n        {/* ... */}\n      </form>\n    </div>\n  );\n};\n\nexport default ProductServiceForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,kBAAkB,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,SAAS,CAAC;EAC3C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMe,gBAAgB,GAAIC,YAAY,IAAK;IACzCN,OAAO,CAACM,YAAY,CAAC;IACrBR,OAAO,CAAC,EAAE,CAAC;IACXI,QAAQ,CAAC,EAAE,CAAC;IACZE,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,MAAMG,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,MAAMC,IAAI,GAAG;MACXb,IAAI;MACJE,IAAI;MACJE,KAAK,EAAEU,UAAU,CAACV,KAAK,CAAC;MACxBE,KAAK,EAAEJ,IAAI,KAAK,SAAS,GAAGa,QAAQ,CAACT,KAAK,CAAC,GAAG;IAChD,CAAC;IAED,MAAM;MAAEU;IAAM,CAAC,GAAG,MAAMtB,QAAQ,CAACuB,IAAI,CAAC,WAAW,CAAC,CAACC,MAAM,CAAC,CAACL,IAAI,CAAC,CAAC;IAEjE,IAAIG,KAAK,EAAE;MACTG,OAAO,CAACH,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD,CAAC,MAAM;MACLlB,aAAa,CAAC,CAAC,CAAC,CAAC;IACnB;IAEAsB,SAAS,CAAC,CAAC;EACb,CAAC;EAED,MAAMA,SAAS,GAAGA,CAAA,KAAM;IACtBnB,OAAO,CAAC,EAAE,CAAC;IACXE,OAAO,CAAC,SAAS,CAAC;IAClBE,QAAQ,CAAC,EAAE,CAAC;IACZE,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,oBACEX,OAAA;IAAKyB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7B1B,OAAA;MAAA0B,QAAA,EAAI;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpC9B,OAAA;MAAM+B,EAAE,EAAC,sBAAsB;MAACC,QAAQ,EAAElB;IAAa;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEjD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAC3B,EAAA,CAjDIF,kBAAkB;AAAAgC,EAAA,GAAlBhC,kBAAkB;AAmDxB,eAAeA,kBAAkB;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}